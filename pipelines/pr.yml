pipelines:
  - name: charts_build
    steps:
      - name: lint_scripts
        type: Bash
        configuration:
          inputResources:
            - name: charts_repo_pr
        execution:
          onStart:
            - pushd ${res_charts_repo_pr_resourcePath}
          onExecute:
            - echo "Run shell scripts linting!"
            - ${res_charts_repo_pr_resourcePath}/test/lint-scripts.sh
          onComplete:
            - popd
          onSuccess:
            - add_pipeline_variables step_status_${step_name}="success"
          onFailure:
            - add_pipeline_variables step_status_${step_name}="failure"
            - update_commit_status charts_repo_pr --context "step_status_${step_name}" --message "Basic linting failed"

      - name: charts_testing
        type: Bash
        configuration:
          inputResources:
            - name: charts_repo_pr
          integrations:
            - name: charts_testing_cluster
          inputSteps:
            - name: lint_scripts
          environmentVariables:
              CHART_TESTING_IMAGE: quay.io/helmpack/chart-testing
              CHART_TESTING_TAG: v2.4.1
              TEST_IMAGE: gcr.io/kubernetes-charts-ci/test-image
              TEST_IMAGE_TAG: v3.4.1
              CHARTS_REPO: https://github.com/jfrog/charts
              KUBEVAL_VERSION: 0.14.0
              HELM_VERSION: v2.16.1
              CHART_TESTING_ARGS: ""
              GCLOUD_GKE_CLUSTER: ${int_charts_testing_cluster_cluster}
              GCLOUD_SERVICE_KEY_CHARTS_CI: ${int_charts_testing_cluster_gcp_service_key}
        execution:
          onStart:
            - pushd ${res_charts_repo_resourcePath}
          onExecute:
            - echo "Run chart-testing linting!"
            - ${res_charts_repo_pr_resourcePath}/test/lint-charts.sh || echo "Failed!"
            - >
              if cat tmp/lint.log | grep "No chart changes detected" > /dev/null; then
                  echo "No chart changes detected, stopping pipeline!"
              fi
            - echo "Run charts-testing install test!"
            - ${res_charts_repo_pr_resourcePath}/test/e2e-gke.sh
          onComplete:
            - popd
          onSuccess:
            - add_pipeline_variables step_status_${step_name}="success"
          onFailure:
            - add_pipeline_variables step_status_${step_name}="failure"
            - update_commit_status charts_repo_pr --context "step_status_${step_name}" --message "Execution failed"

      - name: status_update
        type: Bash
        configuration:
          inputSteps:
            - name: charts_testing
          inputResources:
            - name: charts_repo_pr
        execution:
          onExecute:
            - |
              for var in "${!step_status_@}"; do
                  stepStatusVarName="${var}"
                  statusValue="${!var}"

                  echo "Updating status: $stepStatusVarName - $statusValue to bitbucket"
                  update_commit_status charts_repo_pr --status "$statusValue"  --context "$stepStatusVarName" --message "$stepStatusVarName"
              done
