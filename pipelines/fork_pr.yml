pipelines:
  - name: charts_fork_pr
    configuration:
      environmentVariables:
        readOnly:
          CHART_TESTING_IMAGE: quay.io/helmpack/chart-testing
          CHART_TESTING_TAG: v2.4.1
          TEST_IMAGE: gcr.io/kubernetes-charts-ci/test-image
          TEST_IMAGE_TAG: v3.4.1
          CHARTS_REPO: https://github.com/jfrog/charts
          KUBEVAL_VERSION: 0.15.0
          HELM_VERSION: v2.16.5
          CHART_TESTING_ARGS: ""
          GCLOUD_GKE_CLUSTER: ${int_charts_testing_cluster_cluster}
          GCLOUD_SERVICE_KEY_CHARTS_CI: ${int_charts_testing_cluster_gcp_service_key}
    steps:
      - name: is_pr_from_fork
        type: Bash
        configuration:
          environmentVariables:
            step_url: "https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
          inputResources:
            - name: charts_repo_fork_pr
          integrations:
            - name: charts_rt
        execution:
          onExecute:
            - |
              if $res_charts_repo_fork_pr_isPullRequest; then
                head=$(echo "$res_charts_repo_fork_pr_shaData" | jq -r .pullRequestRepoFullName)
                base="$res_charts_repo_fork_pr_gitRepoFullName"
                if [ "$head" == "$base" ]; then
                  echo "PR is not from the fork, skipping the pipeline!"
                  exit 1
                fi
              fi
      - name: lint_scripts
        type: Bash
        configuration:
          inputResources:
            - name: charts_repo_fork_pr
          inputSteps:
            - name: is_pr_from_fork
        execution:
          onStart:
            - pushd ${res_charts_repo_fork_pr_resourcePath}
          onExecute:
            - echo "Run shell scripts linting!"
            - mkdir -p tmp
            - ${res_charts_repo_fork_pr_resourcePath}/test/lint-scripts.sh 2>&1 | tee tmp/lint-scripts.log
            - export JFROG_CLI_OFFER_CONFIG=false; jfrog rt u tmp/lint-scripts.log chartlogs/${run_number}/lint-scripts.log --server-id chartstesting --url ${int_charts_rt_url} --user ${int_charts_rt_user} --password ${int_charts_rt_apikey}
          onComplete:
            - popd
          onSuccess:
            - add_run_variables step_url=" https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
            - export step_url=" https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
            - update_commit_status charts_repo_fork_pr --context "step_status_${step_name}" --message "Scripts linting successful. Download logs at https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
          onFailure:
            - add_run_variables step_url=" https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
            - add_pipeline_variables step_url=" https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
            - export step_url=" https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
            - update_commit_status charts_repo_fork_pr --context "step_status_${step_name}" --message "Scripts linting failed!. Download logs at https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
      - name: lint_charts
        type: Bash
        configuration:
          environmentVariables:
            step_url: "https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
          inputResources:
            - name: charts_repo_fork_pr
          inputSteps:
            - name: lint_scripts
          integrations:
            - name: charts_rt
        execution:
          onStart:
            - pushd ${res_charts_repo_fork_pr_resourcePath}
          onExecute:
            - echo "Run charts linting!"
            - ${res_charts_repo_fork_pr_resourcePath}/test/lint-charts.sh || echo "Failed!"
            - |
              if cat tmp/lint.log | grep -e "Error linting charts" -e "No CHANGELOG entry for chart" > /dev/null; then
                  echo "Charts linting failed!"
                  exit 1
              fi
            - |
              if cat tmp/lint.log | grep "No chart changes detected" > /dev/null; then
                echo "No chart changes detected!"
                add_run_variables do_not_install=true
              fi
            - export JFROG_CLI_OFFER_CONFIG=false; jfrog rt u tmp/lint.log chartlogs/${run_number}/lint.log --server-id chartstesting --url ${int_charts_rt_url} --user ${int_charts_rt_user} --password ${int_charts_rt_apikey}
          onComplete:
            - popd
          onSuccess:
            - add_run_variables step_url=" https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
            - add_pipeline_variables step_url=" https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
            - export step_url=" https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
            - update_commit_status charts_repo_fork_pr --context "step_status_${step_name}" --message "Charts linting successful. Download logs at https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
          onFailure:
            - add_run_variables step_url=" https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
            - export step_url=" https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
            - update_commit_status charts_repo_fork_pr --context "step_status_${step_name}" --message "Charts linting failed!. Download logs at https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
      - name: install_charts
        type: Bash
        configuration:
          environmentVariables:
            step_url: "https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
          inputResources:
            - name: charts_repo_fork_pr
          integrations:
            - name: charts_testing_cluster
            - name: charts_rt
          inputSteps:
            - name: lint_charts
        execution:
          onStart:
            - if [[ "${do_not_install}" == "true" ]]; then echo "No chart changes detected!" && exit 0; fi;
            - pushd ${res_charts_repo_fork_pr_resourcePath}
          onExecute:
            - echo "Run charts install!"
            - ${res_charts_repo_fork_pr_resourcePath}/test/e2e-gke.sh
            - |
              if cat tmp/install.log | grep "Error installing charts" > /dev/null; then
                  echo "Charts install failed!"
                  exit 1
              fi
            - export JFROG_CLI_OFFER_CONFIG=false; jfrog rt u tmp/install.log chartlogs/${run_number}/install.log --server-id chartstesting --url ${int_charts_rt_url} --user ${int_charts_rt_user} --password ${int_charts_rt_apikey}
          onComplete:
            - popd
          onSuccess:
            - add_run_variables step_url="https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
            - add_pipeline_variables step_url=" https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
            - export step_url=" https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
            - update_commit_status charts_repo_fork_pr --context "step_status_${step_name}" --message "Charts install successful. Download logs at https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
          onFailure:
            - add_run_variables step_url=" https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
            - export step_url=" https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"
            - update_commit_status charts_repo_fork_pr --context "step_status_${step_name}" --message "Charts install failed!. Download logs at https://chartstesting.jfrog.io/artifactory/chartlogs/${run_number}"