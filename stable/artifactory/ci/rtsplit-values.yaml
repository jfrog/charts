databaseUpgradeReady: true
artifactory:
  replicaCount: 1
  joinKey: EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
  masterKey: FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  persistence:
    enabled: false
  # Remove extraEnvironmentVariables 7.45.x onwards
  extraEnvironmentVariables:
    - name: JF_JFCONNECT_ENABLED
      value: "false"
  replicator:
    enabled: true
    ingress:
      name:
      hosts: []
      className: "testclass1"
    trackerIngress:
      enabled: true
      className: "testclass2"
    # Add lifecycle hooks for replicator container
    lifecycle:
      postStart:
        exec:
          command: ["/bin/sh", "-c", "echo Hello from the replicator postStart handler >> /tmp/message"]
      preStop:
        exec:
          command: ["/bin/sh", "-c", "echo Hello from the replicator postStart handler >> /tmp/message"]
  resources:
    requests:
      memory: "4Gi"
      cpu: "2"
    limits:
      memory: "6Gi"
      cpu: "4"
  javaOpts:
    xms: "4g"
    xmx: "4g"

  # Add lifecycle hooks for artifactory container
  lifecycle:
    postStart:
      exec:
        command: ["/bin/sh", "-c", "echo Hello from the artifactory postStart handler >> /tmp/message"]
    preStop:
      exec:
        command: ["/bin/sh", "-c", "echo Hello from the artifactory postStart handler >> /tmp/message"]

postgresql:
  postgresqlPassword: password
  postgresqlExtendedConf:
    maxConnections: 100
  persistence:
    enabled: false

rbac:
  create: true
serviceAccount:
  create: true
  automountServiceAccountToken: true

ingress:
  enabled: true
  className: "testclass"
  hosts:
    - demonow.xyz
nginx:
  enabled: false
jfconnect:
  enabled: true
  resources:
    requests:
      memory: "100Mi"
      cpu: "100m"
    limits:
      memory: "1Gi"
      cpu: "1"
  # Add lifecycle hooks for jfconect container
  lifecycle:
    postStart:
      exec:
        command: ["/bin/sh", "-c", "echo Hello from the jfconnect postStart handler >> /tmp/message"]
    preStop:
      exec:
        command: ["/bin/sh", "-c", "echo Hello from the jfconnect postStart handler >> /tmp/message"]


mc:
  enabled: true
splitServicesToContainers: true

router:
  resources:
    requests:
      memory: "100Mi"
      cpu: "100m"
    limits:
      memory: "1Gi"
      cpu: "1"
  # Add lifecycle hooks for router container
  lifecycle:
    postStart:
      exec:
        command: ["/bin/sh", "-c", "echo Hello from the router postStart handler >> /tmp/message"]
    preStop:
      exec:
        command: ["/bin/sh", "-c", "echo Hello from the router postStart handler >> /tmp/message"]

frontend:
  resources:
    requests:
      memory: "100Mi"
      cpu: "100m"
    limits:
      memory: "1Gi"
      cpu: "1"
  # Add lifecycle hooks for frontend container
  lifecycle:
    postStart:
      exec:
        command: ["/bin/sh", "-c", "echo Hello from the frontend postStart handler >> /tmp/message"]
    preStop:
      exec:
        command: ["/bin/sh", "-c", "echo Hello from the frontend postStart handler >> /tmp/message"]

metadata:
  resources:
    requests:
      memory: "100Mi"
      cpu: "100m"
    limits:
      memory: "1Gi"
      cpu: "1"
  lifecycle:
    postStart:
      exec:
        command: ["/bin/sh", "-c", "echo Hello from the metadata postStart handler >> /tmp/message"]
    preStop:
      exec:
        command: ["/bin/sh", "-c", "echo Hello from the metadata postStart handler >> /tmp/message"]

event:
  resources:
    requests:
      memory: "100Mi"
      cpu: "100m"
    limits:
      memory: "1Gi"
      cpu: "1"
  lifecycle:
    postStart:
      exec:
        command: ["/bin/sh", "-c", "echo Hello from the event postStart handler >> /tmp/message"]
    preStop:
      exec:
        command: ["/bin/sh", "-c", "echo Hello from the event postStart handler >> /tmp/message"]

integration:
  resources:
    requests:
      memory: "100Mi"
      cpu: "100m"
    limits:
      memory: "1Gi"
      cpu: "1"
  lifecycle:
    postStart:
      exec:
        command: ["/bin/sh", "-c", "echo Hello from the integration postStart handler >> /tmp/message"]
    preStop:
      exec:
        command: ["/bin/sh", "-c", "echo Hello from the integration postStart handler >> /tmp/message"]

observability:
  resources:
    requests:
      memory: "100Mi"
      cpu: "100m"
    limits:
      memory: "1Gi"
      cpu: "1"
  lifecycle:
    postStart:
      exec:
        command: ["/bin/sh", "-c", "echo Hello from the observability postStart handler >> /tmp/message"]
    preStop:
      exec:
        command: ["/bin/sh", "-c", "echo Hello from the observability postStart handler >> /tmp/message"]
