kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ template "artifactory.fullname" . }}-bs
  labels:
    app: {{ template "artifactory.name" . }}
    chart: {{ template "artifactory.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
data:
  binarystore.xml: |-
{{- if eq .Values.artifactory.persistence.type "file-system" }}
    <!-- File system replication -->
    <config version="v1">
        <chain template="file-system"/>
    </config>
{{- end }}
{{- if eq .Values.artifactory.persistence.type "google-storage" }}
    <!-- Google storage -->
    <config version="2">
        <chain>
            <provider id="cache-fs" type="cache-fs">
                <provider id="eventual" type="eventual">
                    <provider id="retry" type="retry">
                        <provider id="google-storage" type="google-storage"/>
                    </provider>
                </provider>
            </provider>
        </chain>

        <!-- Set max cache-fs size -->
        <provider id="cache-fs" type="cache-fs">
            <maxCacheSize>{{ .Values.artifactory.persistence.maxCacheSize }}</maxCacheSize>
            <cacheProviderDir>{{ .Values.artifactory.persistence.cacheProviderDir }}</cacheProviderDir>
        </provider>

        <provider id="file-system" type="file-system">
            <fileStoreDir>{{ .Values.artifactory.persistence.mountPath }}/data/filestore</fileStoreDir>
            <tempDir>/tmp</tempDir>
        </provider>

        <provider id="google-storage" type="google-storage">
            <providerId>google-cloud-storage</providerId>
            <endpoint>commondatastorage.googleapis.com</endpoint>
            <httpsOnly>false</httpsOnly>
            <bucketName>{{ .Values.artifactory.persistence.googleStorage.bucketName }}</bucketName>
            <identity>{{ .Values.artifactory.persistence.googleStorage.identity }}</identity>
            <credential>{{ .Values.artifactory.persistence.googleStorage.credential }}</credential>
            <path>{{ .Values.artifactory.persistence.googleStorage.path }}</path>
            <bucketExists>{{ .Values.artifactory.persistence.googleStorage.bucketExists }}</bucketExists>
        </provider>
    </config>
{{- end }}

{{- if eq .Values.artifactory.persistence.type "aws-s3" }}
    <!-- AWS S3 -->
    <config version="2">
        <chain> <!--template="s3"-->
            <provider id="cache-fs" type="cache-fs">
                <provider id="eventual" type="eventual">
                    <provider id="retry-s3" type="retry">
                        <provider id="s3" type="s3"/>
                    </provider>
                </provider>
            </provider>
        </chain>

        <!-- Set max cache-fs size -->
        <provider id="cache-fs" type="cache-fs">
            <maxCacheSize>{{ .Values.artifactory.persistence.maxCacheSize }}</maxCacheSize>
            <cacheProviderDir>{{ .Values.artifactory.persistence.cacheProviderDir }}</cacheProviderDir>
        </provider>

        <provider id="s3" type="s3">
            <endpoint>{{ .Values.artifactory.persistence.awsS3.endpoint }}</endpoint>
        {{- if .Values.artifactory.persistence.awsS3.roleName }}
            <roleName>{{ .Values.artifactory.persistence.awsS3.roleName }}</roleName>
            <refreshCredentials>true</refreshCredentials>
        {{- else }}
            <refreshCredentials>{{ .Values.artifactory.persistence.awsS3.refreshCredentials }}</refreshCredentials>
        {{- end }}
            <s3AwsVersion>{{ .Values.artifactory.persistence.awsS3.s3AwsVersion }}</s3AwsVersion>
            <testConnection>{{ .Values.artifactory.persistence.awsS3.testConnection }}</testConnection>
            <httpsOnly>true</httpsOnly>
            <region>{{ .Values.artifactory.persistence.awsS3.region }}</region>
            <bucketName>{{ .Values.artifactory.persistence.awsS3.bucketName }}</bucketName>
        {{- if .Values.artifactory.persistence.awsS3.identity }}
            <identity>{{ .Values.artifactory.persistence.awsS3.identity }}</identity>
        {{- end }}
        {{- if .Values.artifactory.persistence.awsS3.credential }}
            <credential>{{ .Values.artifactory.persistence.awsS3.credential }}</credential>
        {{- end }}
            <path>{{ .Values.artifactory.persistence.awsS3.path }}</path>
        {{- range $key, $value := .Values.artifactory.persistence.awsS3.properties }}
            <property name="{{ $key }}" value="{{ $value }}"/>
        {{- end }}
        </provider>
    </config>
{{- end }}

{{- if eq .Values.artifactory.persistence.type "azure-blob" }}
    <!-- Azure Blob Storage -->
    <config version="2">
        <chain> <!--template="azure-blob-storage"-->
            <provider id="cache-fs" type="cache-fs">
                <provider id="eventual" type="eventual">
                    <provider id="retry-azure-blob-storage" type="retry">
                        <provider id="azure-blob-storage" type="azure-blob-storage"/>
                    </provider>
                </provider>
            </provider>
        </chain>

        <!-- Set max cache-fs size -->
        <provider id="cache-fs" type="cache-fs">
            <maxCacheSize>{{ .Values.artifactory.persistence.maxCacheSize }}</maxCacheSize>
            <cacheProviderDir>{{ .Values.artifactory.persistence.cacheProviderDir }}</cacheProviderDir>
        </provider>
    
        <provider id="azure-blob-storage" type="azure-blob-storage">
            <accountName>{{ .Values.artifactory.persistence.azureBlob.accountName }}</accountName>
            <accountKey>{{ .Values.artifactory.persistence.azureBlob.accountKey }}</accountKey>
            <endpoint>{{ .Values.artifactory.persistence.azureBlob.endpoint }}</endpoint>
            <containerName>{{ .Values.artifactory.persistence.azureBlob.containerName }}</containerName>
            <testConnection>{{ .Values.artifactory.persistence.azureBlob.testConnection }}</testConnection>
        </provider>
    </config>
{{- end }}
