{{- if .Values.nginx.enabled -}}
{{- $serviceName := include "artifactory.fullname" . -}}
{{- $servicePort := .Values.artifactory.externalPort -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "artifactory.nginx.fullname" . }}
  labels:
    app: {{ template "artifactory.name" . }}
    chart: {{ template "artifactory.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    component: {{ .Values.nginx.name }}
{{- if .Values.nginx.labels }}
{{ toYaml .Values.nginx.labels | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.nginx.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "artifactory.name" . }}
      release: {{ .Release.Name }}
      component: {{ .Values.nginx.name }}
  template:
    metadata:
      annotations:
        checksum/nginx-conf: {{ include (print $.Template.BasePath "/nginx-conf.yaml") . | sha256sum }}
        checksum/nginx-artifactory-conf: {{ include (print $.Template.BasePath "/nginx-artifactory-conf.yaml") . | sha256sum }}
        checksum/replicator-conf: {{ include (print $.Template.BasePath "/replicator-configmap.yaml") . | sha256sum }}
      labels:
        app: {{ template "artifactory.name" . }}
        chart: {{ template "artifactory.chart" . }}
        component: {{ .Values.nginx.name }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "artifactory.serviceAccountName" . }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
    {{- end }}
      initContainers:
      - name: "setup"
        image: "{{ .Values.initContainerImage }}"
        imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
        command:
        - '/bin/sh'
        - '-c'
        - >
          rm -rfv {{ .Values.nginx.persistence.mountPath }}/lost+found;
          mkdir -p {{ .Values.nginx.persistence.mountPath }}/logs;
        volumeMounts:
        - mountPath: {{ .Values.nginx.persistence.mountPath | quote }}
          name: nginx-volume
      securityContext:
        runAsUser: {{ .Values.nginx.uid }}
        fsGroup: {{ .Values.nginx.gid }}
      containers:
      - name: {{ .Values.nginx.name }}
        image: '{{ .Values.nginx.image.repository }}:{{ default .Chart.AppVersion .Values.nginx.image.version }}'
        imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
        command:
          - 'nginx'
          - '-g'
          - 'daemon off;'
        ports:
        - containerPort: {{ .Values.nginx.internalPortHttp }}
        - containerPort: {{ .Values.nginx.internalPortHttps }}
        {{- if .Values.artifactory.replicator.enabled }}
        - containerPort: {{ .Values.nginx.internalPortReplicator }}
        {{- end }}
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: nginx-artifactory-conf
          mountPath: "{{ .Values.nginx.persistence.mountPath }}/conf.d/"
        {{- if .Values.artifactory.replicator.enabled }}
        - name: nginx-replicator-conf
          mountPath: "{{ .Values.nginx.persistence.mountPath }}/conf.d/replicator/"
        {{- end }}
        - name: nginx-volume
          mountPath: {{ .Values.nginx.persistence.mountPath | quote }}
        - name: ssl-certificates
          mountPath: "{{ .Values.nginx.persistence.mountPath }}/ssl"
        resources:
{{ toYaml .Values.nginx.resources | indent 10 }}
        {{- if .Values.nginx.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.nginx.readinessProbe.path }}
            port: 80
          initialDelaySeconds: {{ .Values.nginx.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.nginx.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.nginx.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.nginx.readinessProbe.failureThreshold }}
          successThreshold: {{ .Values.nginx.readinessProbe.successThreshold }}
        {{- end }}
        {{- if .Values.nginx.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.nginx.livenessProbe.path }}
            port: 80
          initialDelaySeconds: {{ .Values.nginx.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.nginx.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.nginx.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.nginx.livenessProbe.failureThreshold }}
          successThreshold: {{ .Values.nginx.livenessProbe.successThreshold }}
        {{- end }}
      {{- $image := .Values.logger.image.repository }}
      {{- $tag := .Values.logger.image.tag }}
      {{- $mountPath := .Values.nginx.persistence.mountPath }}
      {{- range .Values.nginx.loggers }}
      - name: {{ . | replace "_" "-" | replace "." "-" }}
        image: '{{ $image }}:{{ $tag }}'
        command:
        - tail
        args:
        - '-F'
        - '{{ $mountPath }}/logs/{{ . }}'
        volumeMounts:
        - name: nginx-volume
          mountPath: {{ $mountPath }}
      {{- end }}
    {{- with .Values.nginx.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.nginx.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.nginx.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
      - name: nginx-conf
        configMap:
        {{- if .Values.nginx.customConfigMap }}
          name: {{ .Values.nginx.customConfigMap }}
        {{- else }}
          name: {{ template "artifactory.fullname" . }}-nginx-conf
        {{- end }}
      - name: nginx-artifactory-conf
        configMap:
      {{- if .Values.nginx.customArtifactoryConfigMap }}
          name: {{ .Values.nginx.customArtifactoryConfigMap }}
      {{- else }}
          name: {{ template "artifactory.fullname" . }}-nginx-artifactory-conf
      {{- end }}
      {{- if .Values.artifactory.replicator.enabled }}
      - name: nginx-replicator-conf
        configMap:
          name: {{ template "artifactory.fullname" . }}-replicator-config
      {{- end }}
      - name: nginx-volume
      {{- if .Values.nginx.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.nginx.persistence.existingClaim | default (include "artifactory.nginx.fullname" .) }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: ssl-certificates
        secret:
      {{- if .Values.nginx.tlsSecretName }}
          secretName: {{ .Values.nginx.tlsSecretName }}
      {{- else }}
          secretName: {{ template "artifactory.fullname" . }}-nginx-certificate
      {{- end }}
{{- end }}
