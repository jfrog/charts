unifiedUpgradeAllowed: true
databaseUpgradeReady: true
postgresql:
  postgresqlPassword: xray
  persistence:
    enabled: false
rabbitmq:
  auth:
    username: guest
    password: password
  persistence:
    enabled: false

common:
  persistence:
    enabled: false
  customInitContainersBegin: |
   - name: "custom-init-begin-local"
     image: "{{ .Values.initContainerImage }}"
     imagePullPolicy: "{{ .Values.imagePullPolicy }}"
     command:
       - 'sh'
       - '-c'
       - 'touch {{ .Values.xray.persistence.mountPath }}/init-begin-local'
     volumeMounts:
       - mountPath: "{{ .Values.xray.persistence.mountPath }}"
         name: data-volume
  customVolumes: |
   - name: custom-volume-local
     emptyDir:
       sizeLimit: 100Mi
  customVolumeMounts: |
   - name: custom-volume-local
     mountPath: "/scriptslocal"
  customInitContainers: |
   - name: "custom-init-local"
     image: "{{ .Values.initContainerImage }}"
     imagePullPolicy: "{{ .Values.imagePullPolicy }}"
     command:
       - 'sh'
       - '-c'
       - 'touch {{ .Values.xray.persistence.mountPath }}/init-local'
     volumeMounts:
       - mountPath: "{{ .Values.xray.persistence.mountPath }}"
         name: data-volume
  customSidecarContainers: |
   - name: "sidecar-list-local"
     image: "{{ .Values.initContainerImage }}"
     imagePullPolicy: "{{ .Values.imagePullPolicy }}"
     securityContext:
       allowPrivilegeEscalation: false
       capabilities:
         drop:
           - NET_RAW
     command: ["sh","-c","echo 'Sidecar is running in local' >> /scriptslocal/sidecar.txt; cat /scriptslocal/sidecar.txt; while true; do sleep 30; done"]
     volumeMounts:
       - mountPath: "/scriptslocal"
         name: custom-volume-local
     resources:
       requests:
         memory: "32Mi"
         cpu: "50m"
       limits:
         memory: "128Mi"
         cpu: "100m"

global:
  jfrogUrl: http://artifactory.rt:8082
  masterKey: FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  joinKey: EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
  customInitContainersBegin: |
   - name: "custom-init-begin-global"
     image: "{{ .Values.initContainerImage }}"
     imagePullPolicy: "{{ .Values.imagePullPolicy }}"
     command:
       - 'sh'
       - '-c'
       - 'touch {{ .Values.xray.persistence.mountPath }}/init-begin-global'
     volumeMounts:
       - mountPath: "{{ .Values.xray.persistence.mountPath }}"
         name: data-volume
  customVolumes: |
   - name: custom-volume-global
     emptyDir:
       sizeLimit: 100Mi
  customVolumeMounts: |
   - name: custom-volume-global
     mountPath: "/scriptsglobal"
  customInitContainers: |
   - name: "custom-init-global"
     image: "{{ .Values.initContainerImage }}"
     imagePullPolicy: "{{ .Values.imagePullPolicy }}"
     command:
       - 'sh'
       - '-c'
       - 'touch {{ .Values.xray.persistence.mountPath }}/init-global'
     volumeMounts:
       - mountPath: "{{ .Values.xray.persistence.mountPath }}"
         name: data-volume
  customSidecarContainers: |
   - name: "sidecar-list-global"
     image: "{{ .Values.initContainerImage }}"
     imagePullPolicy: "{{ .Values.imagePullPolicy }}"
     securityContext:
       allowPrivilegeEscalation: false
       capabilities:
         drop:
           - NET_RAW
     command: ["sh","-c","echo 'Sidecar is running in global' >> /scriptsglobal/sidecar.txt; cat /scriptsglobal/sidecar.txt; while true; do sleep 30; done"]
     volumeMounts:
       - mountPath: "/scriptsglobal"
         name: custom-volume-global
     resources:
       requests:
         memory: "32Mi"
         cpu: "50m"
       limits:
         memory: "128Mi"
         cpu: "100m"

server:
  resources:
    requests:
      memory: "300Mi"
      cpu: "100m"
    limits:
      memory: "4Gi"
      cpu: "3"

analysis:
  resources:
    requests:
      memory: "300Mi"
      cpu: "50m"
    limits:
      memory: "4Gi"
      cpu: "3"

persist:
  resources:
    requests:
      memory: "300Mi"
      cpu: "50m"
    limits:
      memory: "4Gi"
      cpu: "3"

indexer:
  resources:
    requests:
      memory: "300Mi"
      cpu: "50m"
    limits:
      memory: "4Gi"
      cpu: "4"
