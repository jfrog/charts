apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "xray-persist.fullname" . }}
  labels:
    app: {{ template "xray.name" . }}
    chart: {{ template "xray.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    component: {{ .Values.persist.name }}
spec:
  serviceName: {{ template "xray-persist.fullname" . }}
  replicas: {{ .Values.persist.replicaCount }}
  updateStrategy:
    type: {{ .Values.persist.updateStrategy }}
  podManagementPolicy: {{ .Values.persist.podManagementPolicy }}
  selector:
    matchLabels:
      app: {{ template "xray.name" . }}
      release: {{ .Release.Name }}
      component: {{ .Values.persist.name }}
  template:
    metadata:
      labels:
        app: {{ template "xray.name" . }}
        release: {{ .Release.Name }}
        component: {{ .Values.persist.name }}
      annotations:
        checksum/config: {{ include (print .Template.BasePath "/xray-setup-conf.yaml") . | sha256sum }}
    spec:
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
    {{- end }}
      serviceAccountName: {{ template "xray.serviceAccountName" . }}
      securityContext:
        runAsUser: {{ .Values.common.xrayUserId }}
        fsGroup: {{ .Values.common.xrayGroupId }}
      initContainers:
      {{- if .Values.common.customInitContainersBegin }}
{{ tpl .Values.common.customInitContainersBegin . | indent 6 }}
      {{- end }}
      - name: init-wait
        image: {{ .Values.initContainerImage | quote }}
        env:
        {{- if .Values.mongodb.enabled }}
        - name: MONGODB_USER
          value: {{ .Values.mongodb.mongodbUsername }}
        - name: MONGODB_DATABASE
          value: {{ .Values.mongodb.mongodbDatabase }}
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-mongodb
              key: mongodb-password
        {{- else }}
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "xray.fullname" . }}-mongodb-secret
              key: mongoUrl
        {{- end }}
        {{- if .Values.postgresql.enabled }}
        - name: POSTGRES_USER
          value: {{ .Values.postgresql.postgresUser }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgresql
              key: postgres-password
        - name: POSTGRES_DB
          value: {{ .Values.postgresql.postgresDatabase }}
        {{- else }}
        - name: POSTGRES_URL
          valueFrom:
            secretKeyRef:
              name: {{ template "xray.fullname" . }}-postgres-secret
              key: postgresqlUrl
        {{- end }}
        {{ if index .Values "rabbitmq-ha" "enabled" }}
        - name: RABBITMQ_USER
          value: {{ index .Values "rabbitmq-ha" "rabbitmqUsername" }}
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-rabbitmq-ha
              key: rabbitmq-erlang-cookie
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-rabbitmq-ha
              key: rabbitmq-password
        {{- end }}
        {{ if index .Values "rabbitmq" "enabled" }}
        - name: RABBITMQ_USER
          value: {{ index .Values "rabbitmq" "rabbitmqUsername" }}
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-rabbitmq
              key: rabbitmq-erlang-cookie
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-rabbitmq
              key: rabbitmq-password
        {{- end }}
        command:
        - '/bin/sh'
        - '-c'
        - >
          cp -fv /scripts/setup.sh {{ .Values.common.xrayConfigPath }};
          chmod +x {{ .Values.common.xrayConfigPath }}/setup.sh;
          {{ .Values.common.xrayConfigPath }}/setup.sh;
        volumeMounts:
        - name: data-volume
          mountPath: "{{ .Values.common.xrayConfigPath }}"
        - name: setup
          mountPath: "/scripts"
        {{- if and .Values.global.postgresqlUrl .Values.global.postgresqlTlsSecret (not .Values.postgresql.enabled) }}
        - name: tls-volume
          mountPath: /tmp/tls
        {{- end }}
      {{- if .Values.common.customInitContainers }}
{{ tpl .Values.common.customInitContainers . | indent 6 }}
      {{- end }}
      containers:
      - name: {{ .Values.persist.name }}
        image: {{ .Values.persist.image }}:{{ default .Chart.AppVersion .Values.common.xrayVersion }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        env:
        - name: XRAYCONFIGPATH
          value: "{{ .Values.common.xrayConfigPath }}"
        - name: XRAY_MASTER_KEY
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.common.masterKeySecretName | default (include "xray.fullname" .) }}"
              key: master-key
        - name: XRAY_HA_NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        ports:
        - containerPort: {{ .Values.persist.internalPort }}
        volumeMounts:
        - name: data-volume
          mountPath: "{{ .Values.common.xrayConfigPath }}"
        securityContext:
          allowPrivilegeEscalation: false
        resources:
{{ toYaml .Values.persist.resources | indent 10 }}
        readinessProbe:
          httpGet:
            path: /debug/pprof/
            port: {{ .Values.persist.internalPort }}
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 10
        livenessProbe:
          httpGet:
            path: /debug/pprof/
            port: {{ .Values.persist.internalPort }}
          initialDelaySeconds: 90
          periodSeconds: 10
      {{- $image := .Values.logger.image.repository }}
      {{- $tag := .Values.logger.image.tag }}
      {{- $mountPath := .Values.common.xrayConfigPath }}
      {{- range .Values.persist.loggers }}
      - name: {{ . | replace "_" "-" | replace "." "-" }}
        image: '{{ $image }}:{{ $tag }}'
        command:
          - tail
        args:
          - '-F'
          - '{{ $mountPath }}/logs/{{ . }}'
        volumeMounts:
          - name: data-volume
            mountPath: {{ $mountPath }}
      {{- end }}
    {{- with .Values.analysis.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.analysis.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.analysis.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
      - name: data-volume
        emptyDir:
          sizeLimit: {{ .Values.persist.persistence.size }}
      {{- if and .Values.global.postgresqlUrl .Values.global.postgresqlTlsSecret (not .Values.postgresql.enabled) }}
      - name: tls-volume
        secret:
          secretName: {{ .Values.global.postgresqlTlsSecret }}
      {{- end }}
      - name: setup
        configMap:
          name: {{ template "xray.fullname" . }}-setup
