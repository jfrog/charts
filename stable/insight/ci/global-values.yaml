# Leave this file empty to ensure that CI runs builds against the default configuration in values.yaml.
# If this is an upgrade over an existing Mission Control 4.x, explicitly pass 'unifiedUpgradeAllowed=true' to upgrade
unifiedUpgradeAllowed: true
databaseUpgradeReady: true
global:
  customInitContainersBegin: |
   - name: "custom-init-begin-global"
     image: "{{ .Values.initContainerImage }}"
     imagePullPolicy: "{{ .Values.imagePullPolicy }}"
     command:
       - 'sh'
       - '-c'
       - 'touch {{ .Values.insightServer.persistence.mountPath }}/init-begin-global'
     volumeMounts:
       - mountPath: "{{ .Values.insightServer.persistence.mountPath }}"
         name: insight-data
  customVolumes: |
   - name: custom-volume-global
     emptyDir:
       sizeLimit: 100Mi
  customVolumeMounts: |
   - name: custom-volume-global
     mountPath: "/scriptsglobal"
  customInitContainers: |
   - name: "custom-init-global"
     image: "{{ .Values.initContainerImage }}"
     imagePullPolicy: "{{ .Values.imagePullPolicy }}"
     command:
       - 'sh'
       - '-c'
       - 'touch {{ .Values.insightServer.persistence.mountPath }}/init-global'
     volumeMounts:
       - mountPath: "{{ .Values.insightServer.persistence.mountPath }}"
         name: insight-data
  customSidecarContainers: |
   - name: "sidecar-list-global"
     image: "{{ .Values.initContainerImage }}"
     imagePullPolicy: "{{ .Values.imagePullPolicy }}"
     securityContext:
       allowPrivilegeEscalation: false
       capabilities:
         drop:
           - NET_RAW
     command: ["sh","-c","echo 'Sidecar is running in global' >> /scriptsglobal/sidecar.txt; cat /scriptsglobal/sidecar.txt; while true; do sleep 30; done"]
     volumeMounts:
       - mountPath: "/scriptsglobal"
         name: custom-volume-global
     resources:
       requests:
         memory: "32Mi"
         cpu: "50m"
       limits:
         memory: "128Mi"
         cpu: "100m"

insightServer:
  jfrogUrl: http://artifactory.rt:8082
  persistence:
    enabled: false
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1"
  javaOpts:
    xms: "512m"
    xmx: "2g"

insightScheduler:
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1"
  javaOpts:
    xms: "512m"
    xmx: "2g"

router:
  resources:
    requests:
      memory: "100Mi"
      cpu: "100m"
    limits:
      memory: "1Gi"
      cpu: "1"

# To Fix ct tool --reuse-values - PASSWORDS ERROR: you must provide your current passwords when upgrade the release
postgresql:
  postgresqlPassword: password
  db:
    password: password
  persistence:
    enabled: false

elasticsearch:
  persistence:
    enabled: false
  javaOpts:
    xms: "2g"
    xmx: "2g"

common:
  customInitContainersBegin: |
   - name: "custom-init-begin-local"
     image: "{{ .Values.initContainerImage }}"
     imagePullPolicy: "{{ .Values.imagePullPolicy }}"
     command:
       - 'sh'
       - '-c'
       - 'touch {{ .Values.insightServer.persistence.mountPath }}/init-begin-local'
     volumeMounts:
       - mountPath: "{{ .Values.insightServer.persistence.mountPath }}"
         name: insight-data
  customVolumes: |
   - name: custom-volume-local
     emptyDir:
       sizeLimit: 100Mi
  customVolumeMounts: |
   - name: custom-volume-local
     mountPath: "/scriptslocal"
  customInitContainers: |
   - name: "custom-init-local"
     image: "{{ .Values.initContainerImage }}"
     imagePullPolicy: "{{ .Values.imagePullPolicy }}"
     command:
       - 'sh'
       - '-c'
       - 'touch {{ .Values.insightServer.persistence.mountPath }}/init-local'
     volumeMounts:
       - mountPath: "{{ .Values.insightServer.persistence.mountPath }}"
         name: insight-data
  customSidecarContainers: |
   - name: "sidecar-list-local"
     image: "{{ .Values.initContainerImage }}"
     imagePullPolicy: "{{ .Values.imagePullPolicy }}"
     securityContext:
       allowPrivilegeEscalation: false
       capabilities:
         drop:
           - NET_RAW
     command: ["sh","-c","echo 'Sidecar is running in local' >> /scriptslocal/sidecar.txt; cat /scriptslocal/sidecar.txt; while true; do sleep 30; done"]
     volumeMounts:
       - mountPath: "/scriptslocal"
         name: custom-volume-local
     resources:
       requests:
         memory: "32Mi"
         cpu: "50m"
       limits:
         memory: "128Mi"
         cpu: "100m"
